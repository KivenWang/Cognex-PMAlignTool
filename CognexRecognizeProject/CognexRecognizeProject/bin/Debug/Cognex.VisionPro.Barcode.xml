<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.Barcode</name></assembly><members><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeAbortException"><summary>The exception that is thrown when barcode symbol processing is aborted.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeUnmatchedFrameIDException"><summary>The exception that is thrown when a barcode frame (image) ID is cannot be matched.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeDuplicateFrameIDException"><summary>The exception that is thrown when a barcode frame (image) ID is a duplicate.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeTooManyFramesException"><summary>The exception that is thrown when there are too many barcode frames (images).</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeFrameAlreadyProcessedException"><summary>The exception that is thrown when the specified barcode frame (image) has already been processed.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeInvalidCodePageException"><summary>The exception that is thrown when an invalid code page is specified.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogBarcodeImageTooBigForMaxException"><summary>The exception that is thrown when the input image is too big to be run in ProcessingMode Max.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128"><summary>Class containing the Code 128 parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsCode128)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.LengthMax"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode128_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfLengthMax" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>40</DEFAULT></remarks><summary>Maximum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.LengthMin"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode128_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfLengthMin" /></li></ul></event><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>3</DEFAULT></remarks><summary>Minimum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Enabled"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode128_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SfEnabled" /></li></ul></event><summary>If True, attempt to find and process Code128 symbol(s).</summary><remarks><PARA>If TRUE, attempt to find and decode one or more Code128 symbols.</PARA><DEFAULT>TRUE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39"><summary>Class containing the Code 39 parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsCode39)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfHasCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by HasCheckChar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfTransmitCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitCheckChar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfFullASCIIMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FullASCIIMode may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.FullASCIIMode"><summary>If True, interpret the decoded string as full ASCII. This allows all ASCII characters, such as lower case letters, to be used.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_FullASCIIMode--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfFullASCIIMode" /></li></ul></event><remarks><PARA>If TRUE, interpret the decoded string as full ASCII. This allows all ASCII characters, such as lower case letters, to be used.</PARA><DEFAULT>TRUE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.TransmitCheckChar"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_TransmitCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfTransmitCheckChar" /></li></ul></event><remarks><PARA>If TRUE, include the embedded checksum character in the output. Requires <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.HasCheckChar" /> be set to TRUE.</PARA><DEFAULT>FALSE</DEFAULT></remarks><summary>If True, include the embedded checksum character in the output. Requires HasCheckChar be set to True.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.HasCheckChar"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_HasCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfHasCheckChar" /></li></ul></event><remarks><PARA>If TRUE, expect the decoded string to contain an embedded checksum character. Verify this checksum, indicating failure in the symbol result <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Status" /> field.</PARA><DEFAULT>FALSE</DEFAULT></remarks><summary>If True, expect the decoded string to contain an embedded check(sum) character. Verify this checksum, indicating failure in the symbol result Status field.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.LengthMax"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfLengthMax" /></li></ul></event><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>40</DEFAULT></remarks><summary>Maximum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.LengthMin"><summary>Minimum number of characters in the decoded string.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfLengthMin" /></li></ul></event><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>3</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Enabled"><summary>If True, attempt to find and process Code39 symbol(s).</summary><remarks><PARA>If TRUE, attempt to find and decode one or more Code39 symbols.</PARA><DEFAULT>TRUE</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode39_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SfEnabled" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the Code 93 parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsCode93)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.LengthMax"><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>40</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><summary>Maximum number of characters in the decoded string.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode93_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfLengthMax" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.LengthMin"><summary>Minimum number of characters in the decoded string.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode93_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfLengthMin" /></li></ul></event><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>3</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Enabled"><summary>If True, attempt to find and process Code93 symbol(s).</summary><remarks><PARA>If True, attempt to find and process Code93 symbols.</PARA><DEFAULT>True</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsCode93_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SfEnabled" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the 4-State parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsFourState)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.SfType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Type may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Type"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsFourState_Type--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.SfType" /></li></ul></event><remarks><PARA>4-State symbology type. One of  <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants">Australian</see></DEFAULT></remarks><summary>4-State symbology type: Australian, UPU, JapanPost, or USPS.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Enabled"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsFourState_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.SfEnabled" /></li></ul></event><summary>If True, attempt to find and process FourState symbol(s).</summary><remarks><PARA>If TRUE, attempt to find and decode one or more 4-State symbols.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the Interleaved 2 Of 5 parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfHasCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by HasCheckChar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfTransmitCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitCheckChar may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.TransmitCheckChar"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsI2Of5_TransmitCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfTransmitCheckChar" /></li></ul></event><summary>If True, include the embedded checksum character in the output. Requires HasCheckChar be set to True.</summary><remarks><PARA>If TRUE, include the embedded checksum character in the output. Requires <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.HasCheckChar" /> be set to TRUE.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.HasCheckChar"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsI2Of5_HasCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfHasCheckChar" /></li></ul></event><remarks><PARA>If TRUE, expect the decoded string to contain an embedded checksum character. Verify this checksum, indicating failure in the symbol result <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Status" /> field.</PARA><DEFAULT>FALSE</DEFAULT></remarks><summary>If True, expect the decoded string to contain an embedded check(sum) character. Verify this checksum, indicating failure in the symbol result Status field.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.LengthMax"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><summary>Maximum number of characters in the decoded string.</summary><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>40</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsI2Of5_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfLengthMax" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.LengthMin"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 1 or &gt; 80.</para></exception><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>6</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsI2Of5_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfLengthMin" /></li></ul></event><summary>Minimum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Enabled"><summary>If True, attempt to find and process I2Of5 symbol(s).</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsI2Of5_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SfEnabled" /></li></ul></event><remarks><PARA>If TRUE, attempt to find and decode one or more I2Of5 symbols.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the PLANET parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfTransmitCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitCheckChar may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.TransmitCheckChar"><summary>If True, include the embedded checksum character in the output. Requires HasCheckChar be set to True.</summary><remarks><PARA>If TRUE, include the embedded checksum character in the output.</PARA><DEFAULT>FALSE</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPlanet_TransmitCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfTransmitCheckChar" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.LengthMax"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPlanet_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfLengthMax" /></li></ul></event><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>12</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 5 or &gt; 12.</para></exception><summary>Maximum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.LengthMin"><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>5</DEFAULT></remarks><summary>Minimum number of characters in the decoded string.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPlanet_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfLengthMin" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 5 or &gt; 12.</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Enabled"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPlanet_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SfEnabled" /></li></ul></event><remarks><PARA>If TRUE, attempt to find and decode one or more PLANET symbols.</PARA><DEFAULT>FALSE</DEFAULT></remarks><summary>If True, attempt to find and process Planet symbol(s).</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the POSTNET parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfTransmitCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitCheckChar may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.TransmitCheckChar"><summary>If True, include the embedded checksum character in the output. Requires HasCheckChar be set to True.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPostnet_TransmitCheckChar--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfTransmitCheckChar" /></li></ul></event><remarks><PARA>If TRUE, include the embedded checksum character in the output.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.LengthMax"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 5 or &gt; 12.</para></exception><remarks><PARA>Maximum number of characters in the decoded string.</PARA><DEFAULT>12</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPostnet_LengthMax--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfLengthMax" /></li></ul></event><summary>Maximum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.LengthMin"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPostnet_LengthMin--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfLengthMin" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt; 5 or &gt; 12.</para></exception><summary>Minimum number of characters in the decoded string.</summary><remarks><PARA>Minimum number of characters in the decoded string.</PARA><DEFAULT>5</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Enabled"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsPostnet_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SfEnabled" /></li></ul></event><summary>If True, attempt to find and process Postnet symbol(s).</summary><remarks><PARA>If TRUE, attempt to find and decode one or more POSTNET symbols.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS"><summary>Class containing the RSS parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsRSS)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.SfType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Type may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Type"><remarks><PARA>Sets or gets the RSS symbology types to decode.
	The supported types are  RSS-14, RSS Limited, RSS 2D Composite.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants">TypeAll</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsRSS_Type--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.SfType" /></li></ul></event><summary>RSS symbology type: RSS-14, RSS Limited, RSS 2D Composite.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Enabled"><summary>If True, attempt to find and process RSS symbol(s).</summary><remarks><PARA>If True, attempt to find and process RSS symbols.</PARA><DEFAULT>False</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsRSS_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.SfEnabled" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan"><summary>Class containing the UPC/EAN parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfAddOnEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by AddOnEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfUPCE1Enabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UPCE1Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfUPCEExpanded"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UPCEExpanded may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfEAN8AddOnValid"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EAN8AddOnValid may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.EAN8AddOnValid"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsUpcEan_EAN8AddOnValid--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfEAN8AddOnValid" /></li></ul></event><summary>If True, allow EAN-8 symbols with add-on symbols (2 or 5 digit). If True, AddOnEnabled must also be True.</summary><remarks><PARA>If TRUE, allow EAN-8 symbols with add-on symbols (2 or 5 digit). If TRUE, <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.AddOnEnabled" /> must also be TRUE.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.UPCEExpanded"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsUpcEan_UPCEExpanded--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfUPCEExpanded" /></li></ul></event><remarks><PARA>If TRUE, transmit decoded string in 13 digit EAN-13 format. If FALSE, transmit as &lt;number system&gt; + 6 digits + implicit check.</PARA><DEFAULT>TRUE</DEFAULT></remarks><summary>If True, transmit decoded string in 13 digit EAN-13 format. If False, transmit as &lt;number system&gt; + 6 digits + implicit check.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.UPCE1Enabled"><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsUpcEan_UPCE1Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfUPCE1Enabled" /></li></ul></event><remarks><PARA>UPC-E is applicable only to number system 0. If this property is TRUE, allow processing of a non-standard UPC-E variation using number system 1.</PARA><DEFAULT>FALSE</DEFAULT></remarks><summary>UPC-E is applicable only to number system 0. If this property is True, allow processing of a non-standard UPC-E variation using number system 1.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.AddOnEnabled"><remarks><PARA>If TRUE, allow processing of UPC/EAN symbols with a 2 or 5-digit 'add-on' component.</PARA><DEFAULT>TRUE</DEFAULT></remarks><summary>If True, allow processing of UPC/EAN symbols with a 2 or 5-digit 'add-on' component.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsUpcEan_AddOnEnabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfAddOnEnabled" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Enabled"><remarks><PARA>If TRUE, attempt to find and decode one or more UPC/EAN symbols.</PARA><DEFAULT>TRUE</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeParamsUpcEan_Enabled--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SfEnabled" /></li></ul></event><summary>If True, attempt to find and process UpcEan symbol(s).</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar"><summary>Class containing the Codabar parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfLengthMin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMin may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfLengthMax"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LengthMax may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfHasCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by HasCheckChar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfTransmitCheckChar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitCheckChar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SfTransmitStartStop"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TransmitStartStop may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.TransmitStartStop"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>Whether the operator should include the start/stop character in the output. Default is False.</value><summary>Get or set whether the operator should include the start/stop character in the output.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.TransmitCheckChar"><summary>Get or set whether the operator should include the embedded checksum character in the output.</summary><value>Whether the operator should include the embedded checksum character in the output. Requires HasCheckChar to be set to True. Default is False.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.HasCheckChar"><value>Whether the tool should expect the decoded string to contain an embedded check(sum) character. If True, verify this checksum, indicating failure in the symbol result Status field. Default is False.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Get or set whether the operator should expect the decoded string to contain an embedded check(sum) character.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.LengthMax"><value>The maximum number of characters in the decoded string. Default is 40.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">The new value is &lt; 1 or &gt; 80.</exception><summary>Get or set the maximum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.LengthMin"><value>The minimum number of characters in the decoded string. Default is 3.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">The new value is &lt; 1 or &gt; 80.</exception><summary>Get or set the minimum number of characters in the decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.Enabled"><summary>Get or set whether the tool will attempt to find and process Codabar symbol(s).</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>Whether the tool will attempt to find and process Codabar symbols. Default is False.</value></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode"><summary>Class containing the Pharmacode parameters.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.Enabled"><summary>If True, attempt to find and process Pharmacode symbol(s).</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the PDF417 parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.#ctor(Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.SfEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Enabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.SfType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Type may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.Type"><summary>PDF417 symbology type: PDF417, microPDF417</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.Enabled"><summary>If True, attempt to find and process PDF417 symbol(s).</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcode"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing Barcode run parameters.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.#ctor(Cognex.VisionPro.Barcode.CogBarcode)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfRegionMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RegionMode may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPolarity"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Polarity may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfMirrored"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Mirrored may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfNumToFind"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NumToFind may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfGradingMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GradingMode may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TimeoutEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Timeout may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfI2Of5"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by I2Of5 may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode39"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Code39 may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode128"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Code128 may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfUpcEan"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UpcEan may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfFourState"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FourState may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPostnet"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Postnet may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPlanet"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Planet may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfRSS"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RSS may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode93"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Code93 may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfCodabar"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Codabar may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPostalOmniDirectional"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PostalOmniDirectional may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPharmacode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Pharmacode may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfPDF417"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PDF417 may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfDecodedStringCodePage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DecodedStringCodePage may havechanged.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfProcessingMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ProcessingMode may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcode.SfAllowIdenticalSymbols"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by AllowIdenticalSymbols  may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.PDF417"><exception cref="T:System.ArgumentException">The new value is NULL.</exception><value>The PDF417 parameters. May not be NULL.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Get or set the PDF417 parameters.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Pharmacode"><exception cref="T:System.ArgumentException">The new value is NULL.</exception><value>The Pharmacode parameters. May not be NULL.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Get or set the Pharmacode parameters.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Codabar"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The Codabar parameters. May not be NULL.</value><exception cref="T:System.ArgumentException">The new value is NULL.</exception><summary>Get or set the Codabar parameters.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Code93"><remarks><PARA>Code 93 symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93" /> object.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Code93--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode93" /></li></ul></event><summary>The Code 93 parameters.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.RSS"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><remarks><PARA>RSS symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS" />.</DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_RSS--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfRSS" /></li></ul></event><summary>The RSS parameters.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Planet"><summary>The PLANET parameters.</summary><remarks><PARA>PLANET symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet" /> object.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Planet--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfPlanet" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Postnet"><summary>The POSTNET parameters.</summary><remarks><PARA>POSTNET symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet" /> object.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Postnet--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfPostnet" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.FourState"><summary>The 4-State parameters.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_FourState--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfFourState" /></li></ul></event><remarks><PARA>4-State symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState" /> object.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.UpcEan"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_UpcEan--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfUpcEan" /></li></ul></event><summary>The UPC/EAN parameters.</summary><remarks><PARA>UPC/EAN symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan" /> object.</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Code128"><remarks><PARA>Code 128 symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128" /> object.</DEFAULT></remarks><summary>The Code 128 parameters.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Code128--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode128" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Code39"><summary>The Code 39 parameters.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Code39--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfCode39" /></li></ul></event><remarks><PARA>Code 39 symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39" /> object.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.I2Of5"><remarks><PARA>Interleaved 2 of 5 symbology parameters.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5" /> object.</DEFAULT></remarks><summary>The Interleaved 2 of 5 parameters.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The parameter value is NULL.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_I2Of5--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfI2Of5" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.AllowIdenticalSymbols"><summary>Get or set whether identical symbols within the same image should be decoded. If true, decode results may be returned for identical symbols within the same image. Otherwise, at most one result for such symbols will be returned. Two symbols are considered identical if they have the same length, symbology tpe, and decoded string.</summary><value>Whether identical symbols within the same image should be decoded.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.ProcessingMode"><summary>Processing mode: Standard or Max.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.DecodedStringCodePage"><summary>Code page to use when constructing a decoded string.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.PostalOmniDirectional"><summary>Get or set whether postal symbologies (FourState, Planet, Postnet) will be considered at all possible angular orientations or only at approximately horizontal orientations.</summary><value>Whether postal symbologies (FourState, Planet, Postnet) will be considered at all possible angular orientations or only at approximately horizontal orientations. Default is True.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Timeout"><summary>The maximum execution time (msec) allowed to decode a barcode.  If decoding has not finished by the end of the timeout period, it will stop soon thereafter and return E_Cog_TimeoutExpired.  This value only applies if TimeoutEnabled is true.</summary><remarks><BLURB>The maximum execution time (msec) allowed to decode a barcode. If decoding has not finished by the end of the timeout period, it will stop soon thereafter and return E_Cog_TimeoutExpired. This value only applies if TimeoutEnabled is true.</BLURB><PARA>The maximum execution time (msec) allowed to decode a barcode. If decoding has not finished by the end of the timeout period, it will stop soon thereafter and return E_Cog_TimeoutExpired. This value only applies if TimeoutEnabled is true.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.TimeoutEnabled"><remarks><BLURB>If true then the Timeout property limits the execution time of the barcode decoding. If false then timeout is disabled and the Timeout property is ignored.</BLURB><PARA>If true then the Timeout property limits the execution time of the barcode decoding. If false then timeout is disabled and the Timeout property is ignored.</PARA></remarks><summary>If true then the Timeout property limits the execution time of the barcode decoding.  If false then timeout is disabled and the Timeout property is ignored.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.GradingMode"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The grading mode is not one of 
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants">All</see>,
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants">None</see>, or
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants">Basic</see>.</para></exception><remarks><PARA>Determine how decoded symbol(s) should be graded:</PARA><bulletList><bullet-1>Basic adds (if appropriate the particular symbology): <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.EdgeDetermination" />, 
	<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.EdgeContrastMin" />, <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Modulation" />, 
	<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Defects" />, <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ReferenceDecode" />, 
	<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Decodability" />, <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ScanGrade" />, 
	<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.SymbolContrast" />, and <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.UnusedErrorCorrection" />.
	</bullet-1><bullet>All adds <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.UniformIllumination" />and <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ImageSharpness" /> to those computed with Basic.</bullet><bullet>None generates no grades. </bullet></bulletList><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants">Basic</see></DEFAULT></remarks><summary>Grading mode for all decoded symbols: none, basic, all.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_GradingMode--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfGradingMode" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.NumToFind"><remarks><PARA>Maximum number of symbols to find, decode and grade. If more than this number are found, this will be reflected in the results <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Status" /> field. </PARA><DEFAULT>1</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The maximum number of symbols to find is &lt; 1.</para></exception><summary>Maximum number of symbols to find and process. If more than this many are found, this will be reflected in the results Status field.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_NumToFind--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfNumToFind" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Mirrored"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The setting is not one of 
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants">Unknown</see>,
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants">False</see>, or
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants">True</see>.</para></exception><summary>Whether or not the symbol is mirrored. If unknown, attempt to determine automatically. Ignored for linear symbologies.</summary><remarks><PARA>Whether or not the symbol is mirrored. If unknown, the tool attempts to determine this parameter automatically. Ignored for linear symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants">False</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Mirrored--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfMirrored" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.Polarity"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The polarity is not one of 
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants">DarkOnLight</see>,
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants">LightOnDark</see>, or
		<see cref="T:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants">Either</see>.</para></exception><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_Polarity--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfPolarity" /></li></ul></event><summary>The symbol polarity (dark-on-light, light-on-dark, or either).</summary><remarks>This property is only a hint to the Execute method; found symbols may not match this setting. Specifying this property accurately may cause some symbologies to run faster.</remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.RegionMode"><remarks><PARA>How the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is applied to the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBox</see></DEFAULT></remarks><summary>How the Region is applied to the InputImage.</summary><event cref="E:Cognex.VisionPro.Barcode.CogBarcode.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcode_RegionMode--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcode.SfRegionMode" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The region mode is not <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see> or <see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBox</see>.
	</para></exception></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcode.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcode.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion)"><param name="inputImage"><PARA>The <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" /> containing the barcode symbol. </PARA></param><param name="region"><PARA>The <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> that specifies the region containing the barcode symbol. If the <see cref="T:Cognex.VisionPro.CogRegion" /> is NULL, the entire image is processed. </PARA></param><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><paramref name="inputImage" /> is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of the <paramref name="inputImage" />  is not syntactically valid.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space name of the <paramref name="inputImage" />  is  does not exist within <paramref name="inputImage" />'s space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of the <paramref name="inputImage" />  is  not unique within the <paramref name="inputImage" />'s space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <paramref name="region" /> is not a valid space of <paramref name="inputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <paramref name="region" /> is a nonqualified space name and more than one instance of it exists in the space tree of <paramref name="inputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <paramref name="region" /> is not a legal space name.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcode.RegionMode" /> is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see> but <paramref name="region" /> is not an <see cref="T:Cognex.VisionPro.CogRectangleAffine" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The image to process is smaller than 16 x 16 pixels.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><paramref name="region" /> falls completely outside of <paramref name="inputImage" />. Clipping of <paramref name="region" /> is allowed.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcode.RegionMode" /> is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>, and  <paramref name="region" /> falls completely outside of <paramref name="Image" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><paramref name="region" /> is an <see cref="T:Cognex.VisionPro.CogRectangleAffine" /> that is too close to the edge of <paramref name="inputImage" />.</para></exception><returns><PARA>An <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResults" /> object which holds zero or more <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResult" /> objects.</PARA></returns><summary>Find, decode, and optionally grade up to NumToFind symbols within the specified region of the input image.</summary><remarks><PARA>Find, decode, and optionally grade up to <see cref="P:Cognex.VisionPro.Barcode.CogBarcode.NumToFind">NumToFind </see> barcode symbols within the specified region of the input image. The function creates an <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResults" /> object which holds zero or more <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResult" /> objects.</PARA></remarks></member><member name="E:Cognex.VisionPro.Barcode.CogBarcode.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeResultShared"><summary>Cognex Internal use only.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResultShared.#ctor(Cognex.VisionPro.Barcode.CogBarcodeResultShared)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResultShared.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResultShared.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResultShared.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResultShared.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeResult"><remarks>this class is deprecated. Please use CogIDTool instead</remarks><summary>Class containing the found, decoded, and graded results for a single symbol.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.#ctor(Cognex.VisionPro.Barcode.CogBarcodeResult)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.OwnedGraded"><summary>Gets the graded result data.  The graded data items are owned by this result object, but are conveniently grouped together inside the returned interface.</summary><value>An interface containing the graded data for this result.</value></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.OwnedDecoded"><summary>Gets the decoded result data.  The decoded data items are owned by this result object, but are conveniently grouped together inside the returned interface.</summary><value>An interface containing the decoded data for this result.</value></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.BoundsPolygon"><summary>Create a CogPolygon with four vertices describing the bounds of the found symbol. In the selected space of the input image.</summary><remarks><PARA>Create a <see cref="T:Cognex.VisionPro.CogPolygon" /> with four vertices describing the bounds of the found symbol. In the selected space of the input image.</PARA><DEFAULT>An empty <see cref="T:Cognex.VisionPro.CogPolygon" /></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds3Y"><summary>The Y coordinate of the symbol's fourth (of four) bounding point. This is typically the lower right corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The y-coordinate of the symbol's fourth (of four) bounding points. This is typically the lower right corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds3X"><summary>The X coordinate of the symbol's fourth (of four) bounding point. This is typically the lower right corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The x-coordinate of the symbol's fourth (of four) bounding points. This is typically the lower right corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds2Y"><remarks><PARA>The y-coordinate of the symbol's third (of four) bounding points. This is typically the lower left corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>The Y coordinate of the symbol's third (of four) bounding point. This is typically the lower left corner (for a non-mirrored symbol). In the selected space of the input image.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds2X"><summary>The X coordinate of the symbol's third (of four) bounding point. This is typically the lower left corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The x-coordinate of the symbol's third (of four) bounding points. This is typically the lower left corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds1Y"><remarks><PARA>The y-coordinate of the symbol's second (of four) bounding points. This is typically the upper right corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>The Y coordinate of the symbol's second (of four) bounding point. This is typically the upper right corner (for a non-mirrored symbol). In the selected space of the input image.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds1X"><summary>The X coordinate of the symbol's second (of four) bounding point. This is typically the upper right corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The x-coordinate of the symbol's second (of four) bounding points. This is typically the upper right corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds0Y"><summary>The Y coordinate of the symbol's first (of four) bounding point. This is typically the upper left corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The y-coordinate of the symbol's first (of four) bounding points. This is typically the upper left corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Bounds0X"><summary>The X coordinate of the symbol's first (of four) bounding point. This is typically the upper left corner (for a non-mirrored symbol). In the selected space of the input image.</summary><remarks><PARA>The x-coordinate of the symbol's first (of four) bounding points. This is typically the upper left corner (for a non-mirrored symbol). In the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.CenterY"><summary>The Y coordinate of the geometric center of the found symbol in the selected space of the input image.</summary><remarks><PARA>The y-coordinate of the geometric center of the found symbol in the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.CenterX"><summary>The X coordinate of the geometric center of the found symbol in the selected space of the input image.</summary><remarks><PARA>The x-coordinate of the geometric center of the found symbol in the selected space of the input image.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Angle"><summary>The angular orientation of the found symbol in the selected space of the input image. Units are radians.</summary><remarks><PARA>The angular orientation of the found symbol in the selected space of the input image. Units are radians.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.Status"><summary>Describes what if any problem was encountered in analyzing this symbol.</summary><remarks><PARA>Describes any problem encountered in analyzing this symbol.</PARA><NOTE>
	The values returned by this function are for diagnostic purposes only. The returned codes may change in future releases.
</NOTE><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants">Okay</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResult.ID"><remarks><PARA>A unique ID used to identify this Barcode result. This ID also corresponds to the index of this result in the <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResults" /> to which this result belongs.</PARA><DEFAULT>-1</DEFAULT></remarks><summary>A unique ID used to identify this Barcode result. This ID also corresponds to the index of this result in the CogBarcodeResults to which this result belongs.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResult.CreateResultGraphics(Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants)"><param name="graphicOptions"><PARA>A <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants" /> constant.</PARA></param><returns><PARA>An <see cref="T:Cognex.VisionPro.CogCompositeShape" />. </PARA></returns><remarks><PARA>Creates a composite result graphic containing child graphics specified by the <paramref name="graphicOptions" /> which is a bitwise combination of <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants" />.</PARA></remarks><summary>Creates a composite result graphic containing child graphics specified by the GraphicOptions which is a bitwise combination of CogBarcodeResultGraphicConstants.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeResults"><summary>Class containing the collection of individual symbol results.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.#ctor(Cognex.VisionPro.Barcode.CogBarcodeResults)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResults.Status"><summary>Describes what if any problem was encountered in analyzing the symbols in this image.</summary><remarks><PARA>Describes what if any less-than-fatal problem was encountered in analyzing this symbol. Currently these problems all relate to issues that can arise during decoding. Note that since this applies to just this symbol, this property will never have the <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants">NotAllSymbolsReported </see> value.</PARA><NOTE>
	The values returned by this function are for diagnostic purposes only. The returned codes may change in future releases.
</NOTE></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResults.Item(System.Int32)"><param name="index">The index of the item to get or set.</param><summary>Gets or sets the item at the specified index.  In C#, this property is the indexer for the collection.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResults.SyncRoot"><summary>Gets an object that can be used to synchronize access to this collection.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResults.IsSynchronized"><summary>Gets a value indicating whether access to this collection is synchronized (thread-safe).</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeResults.Count"><summary>Gets the number of items contained in this collection.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.Dispose(System.Boolean)"><param name="disposing">Should be set to true when called from your public Dispose() method, thus disposing of all managed and unmanaged resources.  It should be set to false when called from your Finalizer, thus disposing of only unmanaged resources.</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.CopyTo(System.Array,System.Int32)"><param name="array">The array into which to copy.</param><param name="index">The index from which to start copying.</param><summary>Copies the contents of this collection to an array.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeResults.IndexOf(Cognex.VisionPro.Barcode.CogBarcodeResult)"><param name="value">The item whose index is desired.</param><summary>Gets the index of the given item.  If the item cannot be found -1 is returned.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeTool"><summary>Tool that finds, decodes, and optionally grades one or more symbols.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.#ctor(Cognex.VisionPro.Barcode.CogBarcodeTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfRegion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Region may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfResults"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Results may have changed.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Results"><remarks><PARA>The <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeResults" /> from processing the input image and region.</PARA></remarks><summary>The Barcode results from the input image and region.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.RunParams"><remarks><PARA>Run parameters for Barcode processing.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.Barcode.CogBarcode" /></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfRunParams" /></li></ul></event><summary>Run parameters for Barcode processing.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region"><remarks><PARA>The <see cref="T:Cognex.VisionPro.CogRegion" /> that specifies which portion of the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" /> will be processed. The entire image will be processed if Region is set to NULL. </PARA><DEFAULT>NULL</DEFAULT></remarks><summary>Which portion of the InputImage shall be processed.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_Region--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfRegion" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage"><remarks><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> containing the barcode symbol. The <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> property may be used to specify that processing will be performed only on a portion of the InputImage. Processing is performed on the entire InputImage if Region is NULL.</PARA><DEFAULT>NULL</DEFAULT></remarks><summary>The image to be processed.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfInputImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.CurrentRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfCurrentRecordEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants">CurrentRecordConstants</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants">InputImage</see> + 
<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants">Region</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.LastRunRecordDiagEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfLastRunRecordDiagEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants">LastRunRecordDiagConstants</see>. These are diagnostic records that may cause the tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants">InputImageByReference</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogBarcodeTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfLastRunRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants">LastRunRecordConstants</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants">ResultsBounds</see> + 
<see cref="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants">ResultsCenters</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.Run"><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
	
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.Barcode.CogBarcodeTool" /> returns or in a
			<event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><li><see cref="F:Cognex.VisionPro.Barcode.CogBarcodeTool.SfResults" /></li><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.RunParams" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" /> is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />  is not syntactically valid.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space name of the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />  is  does not exist within <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />'s space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />  is  not unique within the <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />'s space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is not a valid space of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is a nonqualified space name and more than one instance of it exists in the space tree of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is not a legal space name.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcode.RegionMode" /> is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see> but <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is not an <see cref="T:Cognex.VisionPro.CogRectangleAffine" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The image to process is smaller than 16 x 16 pixels.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> falls completely outside of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />. Clipping of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is allowed.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcode.RegionMode" /> is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>, and  <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> falls completely outside of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.Region" /> is an <see cref="T:Cognex.VisionPro.CogRectangleAffine" /> that is too close to the edge of <see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.InputImage" />.</para></exception><remarks><PARA>Analyze the image and decode the barcode symbol(s).</PARA><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><summary>Runs the tool using the current parameter settings.</summary></member><member name="M:Cognex.VisionPro.Barcode.CogBarcodeTool.Dispose(System.Boolean)"><param name="disposing">n/a</param><summary>Releases all resources used by this class instance.  Only derived classes that implement Dispose should call this method; Other clients who wish to explicitly release resources should call IDisposable.Dispose.   Do not attempt to access an object after it has been disposed.</summary></member><member name="T:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded"><summary>Barcode decoded results.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.String"><remarks><PARA>The decoded data as a Unicode string.</PARA></remarks><summary>The decoded data as a Unicode string.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierModifier"><remarks><PARA>ISO/IEC 15424:2000 symbol identifier modifier character. Useful in uniquely identifying the symbology.</PARA></remarks><summary>ISO/IEC 15424:2000 symbol identifier modifier character. Useful in uniquely identifying the symbology.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierCode"><summary>ISO/IEC 15424:2000 symbol identifier code character. A = Code 39, C = Code 128, E = UPC/EAN, I = Interleaved 2 of 5, G = Code 93, e = RSS, X = other bar codes.</summary><remarks><PARA>ISO/IEC 15424:2000 symbol identifier code character. A = Code 39, C = Code 128, E = UPC/EAN, I = Interleaved 2 of 5, G = Code 93,
e = RSS, X = other bar codes.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.PrintQuality"><remarks><PARA>Print quality, in range 0 (worst) to 100 (best), or -1 for not requested.</PARA></remarks><summary>Print quality, in range 0 (worst) to 100 (best), or -1 for not requested.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.SymbologySubtype"><remarks><PARA>The actual type of this symbol. </PARA><PARA>Valid for UPC/EAN, RSS and 4-State.
		Always use with 
		<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Symbology" />
		 to determine the actual type of the decoded symbol. A value of  0 indicates that the symbology does not have different types.</PARA></remarks><summary>The actual type of this symbol. Valid for UPC/EAN, RSS and 4-State.Always use with Symbology together to determine the actual type of the decoded symbol. A Value 0 indicates that the symbology doesn't have different types.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Symbology"><summary>The type of this symbol. May be Interleaved 2 of 5, Code 39, Code 93, Code128, UPC/EAN, 4-State, POSTNET, PLANET, or RSS.</summary><remarks><PARA>The type of this symbol. May be Interleaved 2 of 5, Code 39, Code 93, Code128, UPC/EAN, 4-State, POSTNET, PLANET, or RSS.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Valid"><remarks><PARA>Returns whether or not the other decoded results methods and properties (<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Symbology" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.PrintQuality" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierCode" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierModifier" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.String" />,
<see cref="M:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.GetRawByteArray" />)
are <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Valid" />.</PARA><DEFAULT>False</DEFAULT></remarks><summary>Whether or not the other decoded results properties (Symbology, PrintQuality, IdentifierCode, IdentifierModifier, String, RawByteArray) are valid.</summary></member><member name="M:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.GetRawByteArray"><summary>The decoded data as a raw array of bytes. No localization is performed.</summary><remarks><PARA>The decoded data as a raw array of bytes. No localization is performed.</PARA></remarks></member><member name="T:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded"><summary>Barcode graded results.</summary><remarks>this class is deprecated. Please use CogIDTool instead</remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ReflectanceMin"><summary>Graded A if the minimum reflectance value is less than or equal to half of the maximum reflectance value. Graded F otherwise. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ImageSharpness"><summary>Measure of image sharpness. Graded A for high sharpness and strong edges through F for low sharpness and weak edges.</summary><remarks><PARA>Proprietary Cognex measurement, only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. Not computed for 4-State, POSTNET, or PLANET symbologies. This grade is based upon a Cognex-specific algorithm for the determination of image sharpness. This does not match any of the other Cognex image sharpness measures.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.UniformIllumination"><remarks><PARA>Proprietary Cognex measurement, only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. Not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Measure of symbol illumination uniformity, based upon evaluation of greyscale range in quiet zone versus symbol. Graded A for even illumination through F for very uneven illumination.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.UnusedErrorCorrection"><summary>Unused Error Correction grade. A: &gt;=62%, B: &gt;= 50%, C: &gt;= 37%, D: &gt;= 25%, F: &lt; 25%.</summary><remarks><PARA>For supported symbologies that have built-in (Reed-Solomon) error correction, this grade reflects the amount of unused error correction capability. This result is only computed for 4-State symbologies. This result is not computed for linear, POSTNET, or PLANET symbologies. </PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ScanGrade"><summary>The lowest grade received for any reflectance scan profile based quality measurement. See ANSI X3.182.</summary><remarks><PARA>The lowest grade from among EdgeDetermination, EdgeContrastMin, Modulation, Defects, ReferenceDecode, Decodability, and SymbolContrast. This is defined in ANSI X3.182. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.SymbolContrast"><summary>Difference between highest and lowest reflectance values in the scan profile, as percentage of greyscale range. A: &gt;= 70%, B: &gt;= 55%, C: &gt;= 40%, D: &gt;= 20%, F: &lt; 20%. See ANSI X3.182.</summary><remarks><PARA>The maximum greyscale difference across the symbol, as defined in ANSI X3.182. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Decodability"><remarks><PARA>ANSI X3.182 provides a unique definition of this measure for each symbology. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>A measure of how close the symbol characteristics are to the nominal values defined for that symbology. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.ReferenceDecode"><remarks><PARA>A symbol will pass (grade A) when it can be decoded by the ANSI Reference Decode algorithm for this symbology. If it does not pass, it is graded F. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Graded A if the ANSI Reference Decode algorithm can decode this symbol, graded F otherwise. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Defects"><summary>Maximum element reflectance non-uniformity divided by overall symbol contrast. A: &lt;= 0.15, B: &lt;= 0.20, C: &lt;= 0.25, D: &lt;= 0.30, F: &gt; 0.30. See ANSI X3.182.</summary><remarks><PARA>Defects are voids found in the symbol or spots found in the underlying background. Element reflectance non-uniformity is the difference between the highest and lowest greyscale value within that element. ANSI X3.182 defines this grade in terms of the ratio of the maximum element reflectance non-uniformity to the overall symbol contrast. Lower/smaller is better. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.Modulation"><summary>Minimum edge contrast divided by overall symbol contrast. A: &gt;= 0.7, B: &gt;= 0.6, C: &gt;= 0.5, D: &gt;= 0.4, F: &lt; 0.4. See ANSI X3.182.</summary><remarks><PARA>As described in ANSI X3.182, this grade is based upon the ratio of minimum edge contrast to overall symbol contrast. Higher/larger is better. Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.EdgeContrastMin"><summary>Graded A if the minimum reflectance difference between symbol and adjacent background is &gt;= 15% of greyscale range, graded F otherwise. See ANSI X3.182.</summary><remarks><PARA>As described in ANSI X3.182, if the minimum edge contrast observed in the scan reflectance profile for this symbol must be greater than or equal to 15% of the full greyscale range to be deemed "pass" (graded A). Otherwise this symbol is deemed "fail" (graded F). Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.ICogBarcodeResultGraded.EdgeDetermination"><summary>Graded A if the count of global threshold based edges in the scan reflectance profile corresponds to a valid symbology, graded F otherwise. See ANSI X3.182.</summary><remarks><PARA>As described in ANSI X3.182, a scan reflectance profile is a record of the greyscale value (expressed as a percentage of maximum intensity) measured along a single line across the entire width of the symbol. A "global threshold" (GT) is defined as the average of the minimum and maximum intensity values in this profile. If the count of global threshold based edge crossings found in the scan profile corresponds to a valid symbology, the edge determination is said to conform and therefore is assigned the grade A. Otherwise, the edge determination for this symbol is said to be non-conforming, and is assigned the graded F. Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants"><remarks><PARA>Analysis status values for Barcode.</PARA><NOTE>
	The values returned by this function are for diagnostic purposes only. The returned codes may change in future releases.
</NOTE></remarks><summary>Analysis status values for Barcode.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.LinesNotFound"><summary>The detected Row Address patterns of a 2D result cannot form data rows.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.RowAddressPatternOutOfOrder"><summary>The detected Row Address patterns of a 2D result are out of sequence.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.SymbolVersionNotFound"><summary>Version of the symbol could not be determined.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.TooManyErrorBits"><summary>The number of error bits detected in the 2D symbol is beyond the capacity of error correction.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.InternalError"><summary>An internal error occurred during symbol processing.</summary><remarks><PARA>An internal error occurred during symbol processing.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.NotAllSymbolsReported"><remarks><PARA>More than NumToFind symbols were found.</PARA></remarks><summary>More than NumToFind symbols were found.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.StringTruncated"><summary>The decoded string is longer than MaxLength and has been truncated.</summary><remarks><PARA>The decoded string is longer than MaxLength and has been truncated.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.StringUnexpectedLength"><summary>The decoded string length is outside the user specified range.</summary><remarks><PARA>The decoded string length is outside the user specified range.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.DegradedSymbol"><remarks><PARA>This symbol contains unrecognized characters or characters recognized with low confidence.</PARA></remarks><summary>This symbol contains unrecognized characters or characters recognized with low confidence.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.ChecksumFailed"><summary>The checksum for this symbol is incorrect.</summary><remarks><PARA>The checksum for this symbol is incorrect.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.StartStopPatternNotComplete"><summary>The start/stop pattern for this symbol is not complete.</summary><remarks><PARA>The start/stop pattern for this symbol is not complete.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.FinderPatternNotFound"><summary>The finder pattern for this symbol was not found.</summary><remarks><PARA>The finder pattern for this symbol was not found.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeStatusConstants.Okay"><remarks><PARA>Analysis was complete and successful.</PARA></remarks><summary>Analysis was complete and successful.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants"><summary>Enumeration of Barcode symbologies.</summary><remarks><PARA>Enumeration of Barcode symbologies.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.PDF417"><summary>The PDF417 symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Pharmacode"><summary>The Pharmacode symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Codabar"><summary>The Codabar symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Code93"><summary>The Code93 symbology.</summary><remarks><BLURB>The Code93 symbology.</BLURB><PARA>The Code93 symbology.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.RSS"><summary>The RSS symbologies.</summary><remarks><BLURB>The RSS symbologies.</BLURB><PARA>The RSS symbologies.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Planet"><remarks><PARA>The PLANET symbology.</PARA></remarks><summary>The PLANET symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Postnet"><summary>The POSTNET symbology.</summary><remarks><PARA>The POSTNET symbology.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.FourState"><remarks><PARA>The 4-State symbologies.</PARA></remarks><summary>The 4-State symbologies.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.UpcEan"><summary>The UPC/EAN linear symbologies.</summary><remarks><PARA>The UPC/EAN linear symbologies.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Code128"><remarks><PARA>The Code 128 linear symbology.</PARA></remarks><summary>The Code 128 linear symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.Code39"><remarks><PARA>The Code 39 linear symbology.</PARA></remarks><summary>The Code 39 linear symbology.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeSymbologyConstants.I2Of5"><remarks><PARA>The Interleaved 2 of 5 linear symbology.</PARA></remarks><summary>The Interleaved 2 of 5 linear symbology.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants"><remarks><BLURB>Enumeration of symbology UPC/EAN.</BLURB><PARA>Enumeration of symbology UPC/EAN.</PARA></remarks><summary>Enumeration of symbology UPC/EAN.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.UPCA"><summary>Barcode UPC/EAN symbology type UPCA.</summary><remarks><BLURB>Barcode UPC/EAN symbology type UPCA.</BLURB><PARA>Barcode UPC/EAN symbology type UPCA.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.UPCE"><remarks><BLURB>Barcode UPC/EAN symbology type UPCE.</BLURB><PARA>Barcode UPC/EAN symbology type UPCE.</PARA></remarks><summary>Barcode UPC/EAN symbology type UPCE.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.EAN8"><remarks><BLURB>Barcode UPC/EAN symbology type EAN8.</BLURB><PARA>Barcode UPC/EAN symbology type EAN8.</PARA></remarks><summary>Barcode UPC/EAN symbology type EAN8.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.EAN13"><remarks><BLURB>Barcode UPC/EAN symbology type EAN13.</BLURB><PARA>Barcode UPC/EAN symbology type EAN13.</PARA></remarks><summary>Barcode UPC/EAN symbology type EAN13.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.AddOn5"><summary>Barcode UPC/EAN symbology type Add On 5.</summary><remarks><BLURB>Barcode UPC/EAN symbology type Add On 5.</BLURB><PARA>Barcode UPC/EAN symbology type Add On 5.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeUpcEanTypeConstants.AddOn2"><remarks><BLURB>Barcode UPC/EAN symbology type Add On 2.</BLURB><PARA>Barcode UPC/EAN symbology type Add On 2.</PARA></remarks><summary>Barcode UPC/EAN symbology type Add On 2.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants"><summary>Enumeration of Barcode 4-State symbology types.</summary><remarks><PARA>Enumeration of Barcode 4-State symbology types.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants.USPS"><summary>Barcode 4-State symbology type USPS.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants.JapanPost"><summary>Barcode 4-State symbology type JapanPost.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants.UPU"><summary>Barcode 4-State symbology type UPU.</summary><remarks><PARA>Barcode 4-State symbology type UPU.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeFourStateTypeConstants.Australian"><remarks><PARA>Barcode 4-State symbology type Australian.</PARA></remarks><summary>Barcode 4-State symbology type Australian.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants"><summary>Enumeration of Barcode RSS symbology types.</summary><remarks><PARA>Enumeration of Barcode RSS symbology types.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants.TypeAll"><remarks><BLURB>Barcode RSS symbology type All.</BLURB><PARA>Barcode RSS symbology type All.</PARA></remarks><summary>Barcode RSS symbology type All.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants.Type2DComposite"><summary>Barcode RSS symbology type RSS Composite.</summary><remarks><BLURB>Barcode RSS symbology type RSS Composite.</BLURB><PARA>Barcode RSS symbology type RSS Composite.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants.TypeLimited"><summary>Barcode RSS symbology type RSS Limited.</summary><remarks><BLURB>Barcode RSS symbology type RSS Limited.</BLURB><PARA>Barcode RSS symbology type RSS Limited.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeRSSTypeConstants.Type14"><remarks><BLURB>Barcode RSS symbology type RSS-14.</BLURB><PARA>Barcode RSS symbology type RSS-14.</PARA></remarks><summary>Barcode RSS symbology type RSS-14.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodePDFTypeConstants"><summary>Enumeration of PDF symbology types.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePDFTypeConstants.TypeAll"><summary>Barcode PDF symbology type All.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePDFTypeConstants.TypeMicroPDF417"><summary>Barcode PDF symbology type PDF417.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePDFTypeConstants.TypePDF417"><summary>Barcode PDF symbology type PDF417.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants"><remarks><PARA>Enumeration of Barcode polarities.</PARA></remarks><summary>Enumeration of Barcode polarities.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants.Either"><summary>Automatically determine symbol polarity.</summary><remarks><PARA>Automatically determine symbol polarity.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants.LightOnDark"><summary>Light symbol, dark background.</summary><remarks><PARA>Light symbol, dark background.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodePolarityConstants.DarkOnLight"><remarks><PARA>Dark symbol, light background.</PARA></remarks><summary>Dark symbol, light background.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants"><remarks><PARA>Enumeration of Barcode mirrored options.</PARA></remarks><summary>Enumeration of Barcode mirrored options.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants.True"><summary>Symbol is mirrored.</summary><remarks><PARA>Symbol is mirrored.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants.False"><summary>Symbol is not mirrored.</summary><remarks><PARA>Symbol is not mirrored.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeMirroredConstants.Unknown"><remarks><PARA>Automatically determine if symbol is mirrored.</PARA></remarks><summary>Automatically determine if symbol is mirrored.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants"><remarks><PARA>Enumeration of CogBarcode quality grades.</PARA></remarks><summary>Enumeration of CogBarcode quality grades.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.A"><summary>Quality grade A, where A=Excellent and F=Fail.</summary><remarks><PARA>Quality grade A, where A=Excellent and F=Fail.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.B"><summary>Quality grade B, where A=Excellent and F=Fail.</summary><remarks><PARA>Quality grade B, where A=Excellent and F=Fail.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.C"><summary>Quality grade C, where A=Excellent and F=Fail.</summary><remarks><PARA>Quality grade C, where A=Excellent and F=Fail.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.D"><remarks><PARA>Quality grade D, where A=Excellent and F=Fail.</PARA></remarks><summary>Quality grade D, where A=Excellent and F=Fail.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.F"><summary>Quality grade F, where A=Excellent and F=Fail.</summary><remarks><PARA>Quality grade F, where A=Excellent and F=Fail.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants.NotComputed"><remarks><PARA>Quality grade not computed.</PARA></remarks><summary>Quality grade not computed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants"><remarks><PARA>Enumeration of CogBarcode grading modes.</PARA></remarks><summary>Enumeration of CogBarcode grading modes.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants.Basic"><summary>Compute only basic quality grades.</summary><remarks><PARA>Compute only basic quality grades.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants.None"><summary>Do not compute any quality grades.</summary><remarks><PARA>Do not compute any quality grades.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeGradingModeConstants.All"><remarks><PARA>Compute all available quality grades.</PARA></remarks><summary>Compute all available quality grades.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeCodePageConstants"><summary>Enumeration of CogBarcode code pages. The code page designates which character set should be used to construct decoded symbol strings.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCodePageConstants.SimplifiedChinese"><summary>Construct decoded strings using the Simplified Chinese character set.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCodePageConstants.Korean"><summary>Construct decoded strings using the Korean character set.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCodePageConstants.Japanese"><summary>Construct decoded strings using the Japanese character set.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCodePageConstants.ANSILatin1"><summary>Construct decoded strings using the ANSI (Latin 1) character set. This is the typical code page setting for ASCII encoded symbols.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeProcessingModeConstants"><summary>Enumeration of CogBarcode processing modes.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeProcessingModeConstants.Standard"><summary>Process using standard mode.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeProcessingModeConstants.Max"><summary>Process using Max mode.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants"><summary>Constants used to specify desired result graphics.</summary><remarks><PARA>Constants used to specify desired result graphics.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants.Center"><remarks><PARA>Draw the center of the found symbol.</PARA></remarks><summary>Draw the center of the found symbol.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants.TipText"><summary>Turn on tip text for result graphics.</summary><remarks><PARA>Turn on tip text for result graphics.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants.None"><remarks><PARA>Draw no result graphics.</PARA></remarks><summary>Draw no result graphics.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants.All"><remarks><PARA>Draw all result graphics.</PARA></remarks><summary>Draw all result graphics.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeResultGraphicConstants.Bounds"><summary>Draw the bounding four-sided polygon of the found symbol.</summary><remarks><PARA>Draw the bounding four-sided polygon of the found symbol.</PARA></remarks></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.CurrentRecordEnable" /> to specify the 
<see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogBarcode Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogbarcodetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of data that can be included in the tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants.InputImage"><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary><remarks><PARA>Do not include any records in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary><remarks><PARA>Include all possible records in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeCurrentRecordConstants.Region"><summary>Include the region to be processed in the CurrentRecord.</summary><remarks><PARA>Include the region to be processed in the CurrentRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be included in the tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogBarcode Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogbarcodetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants.ResultsCenters"><summary>Include in the composite result graphics of the LastRunRecord, graphics representing the center of each found symbol.</summary><remarks><PARA>Include in the composite result graphics of the LastRunRecord, graphics representing the center of each found symbol.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants.ResultsBounds"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the bounding four-sided polygon of each found symbol.</summary><remarks><PARA>Include in the composite result graphics of the LastRunRecord, a graphic representing the bounding four-sided polygon of each found symbol.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants.None"><remarks><PARA>Do not include any of the non-diagnostic data in the LastRunRecord.</PARA></remarks><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all of the non-diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be included in the tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.Barcode.CogBarcodeTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogBarcode Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogbarcodetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.TransformedRegionPixels"><remarks><PARA>Generate a record containing the pixels within the Region.</PARA></remarks><summary>Generate a record containing the pixels within the Region.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary><remarks><PARA>Include a deep copy of the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.InputImageByReference"><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any of the diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.All"><remarks><PARA>Include all of the diagnostic data in the LastRunRecord.</PARA></remarks><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.Barcode.CogBarcodeLastRunRecordDiagConstants.Region"><summary>Generate a record containing the Region.</summary><remarks><PARA>Generate a record containing the Region.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.String"><summary>The decoded data as a Unicode string.</summary><remarks><PARA>The decoded data as a Unicode string.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.IdentifierModifier"><summary>ISO/IEC 15424:2000 symbol identifier modifier character. Useful in uniquely identifying the symbology.</summary><remarks><PARA>ISO/IEC 15424:2000 symbol identifier modifier character. Useful in uniquely identifying the symbology.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.IdentifierCode"><summary>ISO/IEC 15424:2000 symbol identifier code character. A = Code 39, C = Code 128, E = UPC/EAN, I = Interleaved 2 of 5, G = Code 93, e = RSS, X = other bar codes.</summary><remarks><PARA>ISO/IEC 15424:2000 symbol identifier code character. A = Code 39, C = Code 128, E = UPC/EAN, I = Interleaved 2 of 5, G = Code 93,
e = RSS, X = other bar codes.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.PrintQuality"><summary>Print quality, in range 0 (worst) to 100 (best), or -1 for not requested.</summary><remarks><PARA>Print quality, in range 0 (worst) to 100 (best), or -1 for not requested.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.SymbologySubtype"><summary>The actual type of this symbol. Valid for UPC/EAN, RSS and 4-State.Always use with Symbology together to determine the actual type of the decoded symbol. A Value 0 indicates that the symbology doesn't have different types.</summary><remarks><PARA>The actual type of this symbol. </PARA><PARA>Valid for UPC/EAN, RSS and 4-State.
		Always use with 
		<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Symbology" />
		 to determine the actual type of the decoded symbol. A value of  0 indicates that the symbology does not have different types.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.Symbology"><remarks><PARA>The type of this symbol. May be Interleaved 2 of 5, Code 39, Code 93, Code128, UPC/EAN, 4-State, POSTNET, PLANET, or RSS.</PARA></remarks><summary>The type of this symbol. May be Interleaved 2 of 5, Code 39, Code 93, Code128, UPC/EAN, 4-State, POSTNET, PLANET, or RSS.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.Valid"><remarks><PARA>Returns whether or not the other decoded results methods and properties (<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Symbology" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.PrintQuality" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierCode" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.IdentifierModifier" />,
<see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.String" />,
<see cref="M:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.GetRawByteArray" />)
are <see cref="P:Cognex.VisionPro.Barcode.ICogBarcodeResultDecoded.Valid" />.</PARA><DEFAULT>False</DEFAULT></remarks><summary>Whether or not the other decoded results properties (Symbology, PrintQuality, IdentifierCode, IdentifierModifier, String, RawByteArray) are valid.</summary></member><member name="M:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultDecoded.GetRawByteArray"><summary>The decoded data as a raw array of bytes. No localization is performed.</summary><remarks><PARA>The decoded data as a raw array of bytes. No localization is performed.</PARA></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.ReflectanceMin"><summary>Graded A if the minimum reflectance value is less than or equal to half of the maximum reflectance value. Graded F otherwise. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.ImageSharpness"><remarks><PARA>Proprietary Cognex measurement, only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. Not computed for 4-State, POSTNET, or PLANET symbologies. This grade is based upon a Cognex-specific algorithm for the determination of image sharpness. This does not match any of the other Cognex image sharpness measures.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Measure of image sharpness. Graded A for high sharpness and strong edges through F for low sharpness and weak edges.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.UniformIllumination"><summary>Measure of symbol illumination uniformity, based upon evaluation of greyscale range in quiet zone versus symbol. Graded A for even illumination through F for very uneven illumination.</summary><remarks><PARA>Proprietary Cognex measurement, only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. Not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.UnusedErrorCorrection"><remarks><PARA>For supported symbologies that have built-in (Reed-Solomon) error correction, this grade reflects the amount of unused error correction capability. This result is only computed for 4-State symbologies. This result is not computed for linear, POSTNET, or PLANET symbologies. </PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Unused Error Correction grade. A: &gt;=62%, B: &gt;= 50%, C: &gt;= 37%, D: &gt;= 25%, F: &lt; 25%.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.ScanGrade"><summary>The lowest grade received for any reflectance scan profile based quality measurement. See ANSI X3.182.</summary><remarks><PARA>The lowest grade from among EdgeDetermination, EdgeContrastMin, Modulation, Defects, ReferenceDecode, Decodability, and SymbolContrast. This is defined in ANSI X3.182. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.SymbolContrast"><remarks><PARA>The maximum greyscale difference across the symbol, as defined in ANSI X3.182. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Difference between highest and lowest reflectance values in the scan profile, as percentage of greyscale range. A: &gt;= 70%, B: &gt;= 55%, C: &gt;= 40%, D: &gt;= 20%, F: &lt; 20%. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.Decodability"><remarks><PARA>ANSI X3.182 provides a unique definition of this measure for each symbology. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>A measure of how close the symbol characteristics are to the nominal values defined for that symbology. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.ReferenceDecode"><remarks><PARA>A symbol will pass (grade A) when it can be decoded by the ANSI Reference Decode algorithm for this symbology. If it does not pass, it is graded F. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Graded A if the ANSI Reference Decode algorithm can decode this symbol, graded F otherwise. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.Defects"><remarks><PARA>Defects are voids found in the symbol or spots found in the underlying background. Element reflectance non-uniformity is the difference between the highest and lowest greyscale value within that element. ANSI X3.182 defines this grade in terms of the ratio of the maximum element reflectance non-uniformity to the overall symbol contrast. Lower/smaller is better. This result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Maximum element reflectance non-uniformity divided by overall symbol contrast. A: &lt;= 0.15, B: &lt;= 0.20, C: &lt;= 0.25, D: &lt;= 0.30, F: &gt; 0.30. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.Modulation"><remarks><PARA>As described in ANSI X3.182, this grade is based upon the ratio of minimum edge contrast to overall symbol contrast. Higher/larger is better. Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Minimum edge contrast divided by overall symbol contrast. A: &gt;= 0.7, B: &gt;= 0.6, C: &gt;= 0.5, D: &gt;= 0.4, F: &lt; 0.4. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.EdgeContrastMin"><remarks><PARA>As described in ANSI X3.182, if the minimum edge contrast observed in the scan reflectance profile for this symbol must be greater than or equal to 15% of the full greyscale range to be deemed "pass" (graded A). Otherwise this symbol is deemed "fail" (graded F). Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Graded A if the minimum reflectance difference between symbol and adjacent background is &gt;= 15% of greyscale range, graded F otherwise. See ANSI X3.182.</summary></member><member name="P:Cognex.VisionPro.Barcode.Implementation.Internal.CogBarcodeResultGraded.EdgeDetermination"><remarks><PARA>As described in ANSI X3.182, a scan reflectance profile is a record of the greyscale value (expressed as a percentage of maximum intensity) measured along a single line across the entire width of the symbol. A "global threshold" (GT) is defined as the average of the minimum and maximum intensity values in this profile. If the count of global threshold based edge crossings found in the scan profile corresponds to a valid symbology, the edge determination is said to conform and therefore is assigned the grade A. Otherwise, the edge determination for this symbol is said to be non-conforming, and is assigned the graded F. Note that this result is only computed for supported linear symbologies: Interleaved 2 of 5, Code 39, Code 128, and UPC/EAN. This result is not computed for 4-State, POSTNET, or PLANET symbologies.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.Barcode.CogBarcodeGradeConstants">NotComputed</see></DEFAULT></remarks><summary>Graded A if the count of global threshold based edges in the scan reflectance profile corresponds to a valid symbology, graded F otherwise. See ANSI X3.182.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode128.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode39.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCode93.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsFourState.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsI2Of5.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPlanet.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPostnet.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsRSS.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsUpcEan.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsCodabar.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPharmacode.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcodeParamsPDF417.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.Barcode.CogBarcode.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member></members></doc>